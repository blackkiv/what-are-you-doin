services:
  local_db:
    container_name: local_db
    image: postgres:17
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - "./db/data:/var/lib/postgresql/data"
      - "./db/init.sql:/docker-entrypoint-initdb.d/init-user-db.sql"
    environment:
      POSTGRES_PASSWORD: super_secret_strong_password
      POSTGRES_USER: postgres

  prod_db:
    container_name: wayd.prod_db
    image: postgres:17
    restart: unless-stopped
    volumes:
      - "./db/data:/var/lib/postgresql/data"
      - "./db/init.sql:/docker-entrypoint-initdb.d/init-user-db.sql"
    environment:
      POSTGRES_PASSWORD: super_secret_strong_password
      POSTGRES_USER: postgres
    networks:
      - wayd-net

  backend:
    container_name: wayd.backend
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./wayd-docker/services/backend/Dockerfile
    depends_on:
      - prod_db
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://wayd.prod_db:5432/wayd?currentSchema=app"
      SPRING_FLYWAY_URL: "jdbc:postgresql://wayd.prod_db:5432/wayd"
      CORS_ALLOWED_ORIGINS: "http://localhost"
    networks:
      - wayd-net

  frontend:
    container_name: wayd.frontend
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./wayd-docker/services/frontend/Dockerfile
    ports:
      - "80:8080"
    depends_on:
      - backend
    environment:
      VITE_BACKEND_URL: "http://localhost:80/api"
      BACKEND_URL: "http://wayd.backend:8765"
    networks:
      - nginx-net
      - wayd-net


networks:
  nginx-net:
    name: proxynet
    external: true
  wayd-net:
    name: wayd-net
    external: false
